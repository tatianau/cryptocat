{"version":3,"sources":["stackbot.svg","apis/coinmarketcap.js","actions/index.js","components/TableRow.js","components/Table.js","components/Dropdown.js","components/App.js","reducers/index.js","reducers/dropdownReducer.js","reducers/tableReducer.js","reducers/detailReducer.js","reducers/currencyForPriceReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","axios","create","baseURL","KEY","TableRow","this","props","fetchTableDetail","curId","curPrice","_this","curItem","react_default","a","createElement","className","name","cmc_rank","symbol","quote","concat","price","onClick","onDelete","React","Component","connect","state","ownProps","detailList","find","item","id","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","response","wrap","_context2","prev","next","coinmarketcap","get","sent","type","payload","data","stop","_x2","apply","arguments","Table","componentDidUpdate","tableRows","length","updateDropdown","onDeleteBtn","removeCurrencyRow","addToDropdown","renderTableRows","map","cur","components_TableRow","key","selectedCur","fetchTable","_this2","value","onChange","e","selectCurrencyPrice","target","tableList","selectedCurrencyForPrice","_ref","_callee","_context","_x","curValue","Dropdown","onSelectDropdown","val","dropdownList","parseInt","addCurrencyRow","removeFromDropdown","fetchDropdown","disabled","ctrlDropdown","renderDropdown","_ref3","_callee3","_context3","_x3","App","dropdown","bool","setState","src","logo","alt","components_Table","components_Dropdown","combineReducers","OptionsList","undefined","action","filter","index","array","indexOf","toConsumableArray","listOfRows","details","currency","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.cc15d2bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stackbot.f00399bd.svg\";","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://pro-api.coinmarketcap.com'\n});","import coinmarketcap from '../apis/coinmarketcap';\n\nconst KEY = 'a91f97ac-dc9e-44d0-8b81-52109527f339';\nconst TOTALLIMIT = '100';\nconst TABLELIMIT = '5';\n\n// FETCH CURRENCY TABLE\nexport const fetchTable = () => {\n  return async dispatch => {\n    const response = await coinmarketcap.get(`/v1/cryptocurrency/map?CMC_PRO_API_KEY=${KEY}&limit=${TABLELIMIT}`);\n    dispatch({ type: 'FETCH_TABLE', payload: response.data.data });\n  };\n};\n\n// FETCH CURRENCY TABLE DETAILS\nexport const fetchTableDetail = (id) => {\n  return async dispatch => {\n    const response = await coinmarketcap.get(`/v1/cryptocurrency/quotes/latest?id=${id}&convert=USD,BTC,ETH&CMC_PRO_API_KEY=${KEY}`);\n    dispatch({ type: 'FETCH_TABLE_DETAIL', payload: response.data.data[`${id}`] });\n  };\n};\n\n// FETCH CURRENCY DROPDOWN\nexport const fetchDropdown = () => {\n  return async dispatch => {\n    const response = await coinmarketcap.get(`/v1/cryptocurrency/map?CMC_PRO_API_KEY=${KEY}&limit=${TOTALLIMIT}`);\n    dispatch({ type: 'FETCH_DROPDOWN', payload: response.data.data });\n  };\n};\n\n// ADD CURRENCY TO TABLE\nexport const addCurrencyRow = (id) => {\n  return { \n    type: 'ADD_TABLE_ROW',\n    payload: id\n  };\n};\n\n// REMOVE CURRENCY FROM TABLE\nexport const removeCurrencyRow = (id) => {\n  return { \n    type: 'REMOVE_TABLE_ROW',\n    payload: id\n  };\n};\n\n// SELECT CURRENCY DROPDOWN\nexport const removeFromDropdown = (value) => {\n  return { \n    type: 'REMOVE_FROM_DROPDOWN',\n    payload: value\n  };\n};\n\n// ADD TO CURRENCY DROPDOWN\nexport const addToDropdown = (item) => {\n  return { \n    type: 'ADD_TO_DROPDOWN',\n    payload: item\n  };\n};\n\n// SELECT PRICE DROPDOWN\nexport const selectCurrencyPrice = curValue => {\n  return {\n    type: 'CURRENCY_FOR_PRICE_SELECTED',\n    payload: curValue\n  };\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTableDetail } from '../actions';\n\nclass TableRow extends React.Component {\n  componentDidMount() {\n    this.props.fetchTableDetail(this.props.curId, this.props.curPrice);\n  }\n\n  render(){\n    const { curItem } = this.props;\n    \n    if (!curItem) {\n      return null;\n    }\n\n    return(\n      <div className=\"currency-row\">\n        <div className=\"currency-col currency-name\">{curItem.name}</div>\n        <div className=\"currency-col currency-rank\">{curItem.cmc_rank}</div>\n        <div className=\"currency-col currency-symbol\">{curItem.symbol}</div>\n        <div className=\"currency-col currency-price\">{curItem.quote[`${this.props.curPrice}`].price}</div>\n        <div className=\"currency-col currency-delete\">\n          <button \n            className=\"btn-delete\"\n            onClick={() => this.props.onDelete(curItem)}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { curItem: state.detailList.find(item => item.id === ownProps.curId) };\n};\n\nexport default connect(\n  mapStateToProps, \n  { fetchTableDetail }\n)(TableRow);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTable, selectCurrencyPrice, removeCurrencyRow, addToDropdown } from '../actions';\nimport TableRow from './TableRow';\n\nclass Table extends React.Component {\n  componentDidMount() {\n    this.props.fetchTable();\n  }\n\n  componentDidUpdate = () => {\n    this.props.tableRows.length >= 10 ? this.props.updateDropdown(true) : this.props.updateDropdown(false);\n  }\n\n  onDeleteBtn = (item) => {\n    if (this.props.tableRows.length > 1) {\n      this.props.removeCurrencyRow(item.id);\n      this.props.addToDropdown(item);\n    }\n  }\n\n  renderTableRows = () => {\n    return this.props.tableRows.map(cur => {\n      return(\n        <TableRow \n          onDelete={this.onDeleteBtn} \n          curId={cur.id} \n          key={cur.id} \n          curPrice={this.props.selectedCur}\n        />\n      );\n    });\n  }\n\n  render() {\n    return(\n      <div className=\"currency-table\">\n        <div className=\"currency-row currency-head\">\n          <div className=\"currency-col currency-name\">Currency</div>\n          <div className=\"currency-col currency-rank\">CMC Rank</div>\n          <div className=\"currency-col currency-symbol\">Symbol</div>\n          <div className=\"currency-col currency-price\">\n          <select \n            id=\"price-select\" \n            className=\"price-select\"\n            value={this.props.selectedCur} \n            onChange={(e) => this.props.selectCurrencyPrice(e.target.value)}\n          >\n            <option value=\"USD\">USD</option>\n            <option value=\"BTC\">BTC</option>\n            <option value=\"ETH\">ETH</option>\n          </select>\n          </div>\n          <div className=\"currency-col currency-delete\"></div>\n        </div>\n        {this.renderTableRows()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { tableRows: state.tableList, selectedCur: state.selectedCurrencyForPrice };\n};\n\nexport default connect(\n  mapStateToProps, \n  { fetchTable, selectCurrencyPrice, removeCurrencyRow, addToDropdown }\n)(Table);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchDropdown, removeFromDropdown, addCurrencyRow } from '../actions';\n\nclass Dropdown extends React.Component {\n  componentDidMount() {\n    this.props.fetchDropdown();\n  }\n\n  onSelectDropdown = (val) => {\n    const curItem = this.props.dropdownList.find(item => item.id === parseInt(val));\n    this.props.addCurrencyRow(curItem);\n    this.props.removeFromDropdown(parseInt(val));\n  }\n\n  renderDropdown() {\n    return this.props.dropdownList.map(cur => {\n      return(\n        <option value={cur.id} key={cur.id}>{cur.name}</option>\n      );\n    });\n  }          \n\n  render() {\n    return(\n      <div className=\"currency-dropdown\">\n        <select \n          disabled={this.props.ctrlDropdown}\n          id=\"currency-select\" \n          className=\"currency-select\"\n          onChange={(e) => this.onSelectDropdown(e.target.value)}\n        >\n          <option value=\"\">--Select Currency--</option>\n          {this.renderDropdown()}\n        </select>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { dropdownList: state.dropdownList };\n};\n\nexport default connect(\n  mapStateToProps, \n  { fetchDropdown, removeFromDropdown, addCurrencyRow }\n)(Dropdown);\n\n","import '../CurrencyApp.css';\nimport logo from '../stackbot.svg';\nimport React from 'react';\nimport Table from './Table';\nimport Dropdown from './Dropdown';\n\nclass App extends React.Component {\n  state = { dropdown: false };\n\n  updateDropdown = (bool) => this.setState({ dropdown: bool });\n\n  render(){\n    return(\n      <div>\n        <header className=\"header\">\n          <h2 className=\"title\">StackAdapt</h2>\n          <img className=\"logo\" src={logo} alt=\"logo\" />\n          <h2 className=\"title\">Homework</h2>\n        </header>\n        <div className=\"container\">\n          <Table updateDropdown={this.updateDropdown} />\n          <Dropdown ctrlDropdown={this.state.dropdown} />\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default App;","import { combineReducers } from 'redux';\nimport dropdownReducer from './dropdownReducer';\nimport tableReducer from './tableReducer';\nimport detailReducer from './detailReducer';\nimport currencyForPriceReducer from './currencyForPriceReducer';\n\nexport default combineReducers({\n  dropdownList: dropdownReducer,\n  tableList: tableReducer,\n  detailList: detailReducer,\n  selectedCurrencyForPrice: currencyForPriceReducer\n});","export default (OptionsList = [], action) => {\n  switch (action.type) {\n    case 'FETCH_DROPDOWN': \n      return OptionsList = action.payload.filter((item, index, array) => array.indexOf(item) > 4);\n    case 'REMOVE_FROM_DROPDOWN': \n      return OptionsList.filter(item => item.id !== action.payload);\n    case 'ADD_TO_DROPDOWN': \n      return [...OptionsList, action.payload];\n    default:\n      return OptionsList;\n  }\n};","export default (listOfRows = [], action) => {\n  switch (action.type) {\n    case 'FETCH_TABLE': \n      return listOfRows = action.payload;\n    case 'ADD_TABLE_ROW': \n      return [...listOfRows, action.payload];\n    case 'REMOVE_TABLE_ROW': \n      return listOfRows.filter(item => item.id !== action.payload);\n    default:\n      return listOfRows;\n  }\n};","export default (details = [], action) => {\n  switch (action.type) {\n    case 'FETCH_TABLE_DETAIL': \n      return [...details, action.payload];\n    default:\n      return details;\n  }\n};","export default (currency = 'USD', action) => {\n  switch (action.type) {\n    case 'CURRENCY_FOR_PRICE_SELECTED': \n      return action.payload;\n    default:\n      return currency;\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);"],"sourceRoot":""}